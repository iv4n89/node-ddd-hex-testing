766d61aca550c61252d51062ce144764
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const UserCreator_1 = require("@contexts/User/Application/Create/UserCreator");
const FakeUser_1 = require("../domain/FakeUser");
const UserRepositoryMock_1 = require("../__mocks__/UserRepositoryMock");
const FakeCreateUserRequest_1 = require("./FakeCreateUserRequest");
let repository;
let creator;
beforeEach(() => {
    repository = new UserRepositoryMock_1.UserRepositoryMock();
    creator = new UserCreator_1.UserCreator(repository);
});
describe('UserCreator', () => {
    it('should create a valid user', () => __awaiter(void 0, void 0, void 0, function* () {
        const request = FakeCreateUserRequest_1.FakeCreateUserRequest.random();
        const user = FakeUser_1.FakeUser.fromRequest(request);
        yield creator.run(request);
        repository.assertLastSavedUserIs(user);
    }));
});
